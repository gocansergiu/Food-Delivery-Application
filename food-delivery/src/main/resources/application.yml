server:
  port: 8443
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keystore/testKeystore.p12
    key-store-password: changeit
    key-alias: food-delivery
    require-ssl: true
security:
  oauth2:
    client:
      clientId: 571324953410235
      clientSecret: 62cbb3cba93a913cd9ca0d4b09555b9a
      accessTokenUri: https://graph.facebook.com/oauth/access_token
      userAuthorizationUri: https://www.facebook.com/dialog/oauth
      tokenName: oauth_token
      authenticationScheme: query
      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://graph.facebook.com/me

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/food_delivery?useSSL=false
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
#  security:
#    oauth2:
#      client:
#        registration:
#          facebook:
#            clientId: 571324953410235
#            clientSecret: 62cbb3cba93a913cd9ca0d4b09555b9a
#            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - email
#              - public_profile
#        provider:
#          facebook:
#            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
#            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
#            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)